@model ReceiversMapVM

@{
    ViewData["Title"] = "Map";
}


<div style="width: 45%; height: 45%; position: absolute;" id="map">
    <div id="map-canvas"></div>
</div>
<script>
    // Note: This example requires that you consent to location sharing when
    // prompted by your browser. If you see the error "The Geolocation service
    // failed.", it means you probably did not give permission for the browser to
    // locate you.
    var map, receiverWindow;
    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 59.32932349999999, lng: 18.068580800000063 },
            zoom: 12
        });


        var locations = [];

        @foreach (var product in Model.Positions)
        {
            @:locations.push('@product.ProductName', @product.Longitude, @product.Latitude, 1);
        }



        receiverWindow = new google.maps.InfoWindow;

        var infowindow = new google.maps.InfoWindow();

        var marker, i;

        for (i = 0; i < locations.length; i++) {
            marker = new google.maps.Marker({
                position: new google.maps.LatLng(locations[i][1], locations[i][2]),
                map: map,
                icon: {
                    url: "http://maps.google.com/mapfiles/ms/icons/red-dot.png"
                }
            });

            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                return function () {
                    infowindow.setContent(locations[i][0]);
                    infowindow.open(map, marker);
                }
            })(marker, i));
        }

        // Try HTML5 geolocation.
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };

                receiverWindow.setPosition(pos);
                receiverWindow.setContent('Min position.');
                receiverWindow.open(map);
                map.setCenter(pos);

                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(pos.lat, pos.lng),
                    map: map,
                    icon: {
                        url: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png"
                    }
                });

            }, function () {
                handleLocationError(true, receiverWindow, map.getCenter());
            });
        } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, receiverWindow, map.getCenter());
        }
    }

    function handleLocationError(browserHasGeolocation, receiverWindow, pos) {
        receiverWindow.setPosition(pos);
        receiverWindow.setContent(browserHasGeolocation ?
            'Error: The Geolocation service failed.' :
            'Error: Your browser doesn\'t support geolocation.');
        receiverWindow.open(map);
    }
</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDtkrfI4kUln6UUZTJTvZvv3FC5wP624D4&callback=initMap">
</script>


@foreach (var position in Model.Positions)
{
    @position.Longitude
    @position.Latitude
    @position.ProductsAmount
}
@foreach (var product in Model.Products)
{
    @product.ProductName
    @product.ProductLongitude
    @product.ProductLatitude
    @product.ProductImage
    @product.ProductPickUpDate1
    @product.ProductPickUpDate2

    <a class="button" href="#">Se info</a>
    <a class="button" asp-controller="Receivers" asp-action="ClaimProduct">Boka vara</a>
}
